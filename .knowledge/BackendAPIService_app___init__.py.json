{"is_source_file": true, "format": "Python", "description": "This is the main initialization script for a Flask-based backend API. It sets up the Flask app, configures CORS, loads configuration values, initializes the API and database connections, registers error handlers and blueprints, and exposes a default app instance.", "external_files": ["app.config", "app.db", "app.utils.errors", "app.routes.health", "app.resources.devices"], "external_methods": ["register_error_handlers", "CORS", "Flask", "Api", "Database.connect"], "published": ["app"], "classes": [{"name": "Database", "description": "Represents the database connection and handles establishing the connection to MongoDB."}], "methods": [{"name": "Flask create_app()", "description": "Creates and configures the Flask application, including setting up CORS, loading configuration, initializing API and database, registering error handlers and blueprints.", "scope": "", "scopeKind": ""}], "calls": ["Flask(__name__)", "CORS(app, resources={r\"/*\": {\"origins\": \"*\"}})", "Config()", "Api(app)", "Database(uri=..., db_name=..., tls=..., username=..., password=...)", "db.connect()", "register_error_handlers(app)", "api.register_blueprint(health_blp)", "api.register_blueprint(devices_blp)"], "search-terms": ["create_app", "Flask", "Database connection", "error handlers registration", "blueprint registration", "CORS setup"], "state": 2, "file_id": 5, "knowledge_revision": 26, "git_revision": "ecffbb7f445e825c478265f82d519830aff32204", "revision_history": [{"13": "ecffbb7f445e825c478265f82d519830aff32204"}, {"26": "ecffbb7f445e825c478265f82d519830aff32204"}], "ctags": [{"_type": "tag", "name": "app", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/__init__.py", "pattern": "/^app = create_app()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "create_app", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/__init__.py", "pattern": "/^def create_app() -> Flask:$/", "language": "Python", "typeref": "typename:Flask", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "devices_blp", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/__init__.py", "pattern": "/^from .resources.devices import blp as devices_blp$/", "language": "Python", "kind": "unknown", "nameref": "unknown:blp"}, {"_type": "tag", "name": "health_blp", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/__init__.py", "pattern": "/^from .routes.health import blp as health_blp$/", "language": "Python", "kind": "unknown", "nameref": "unknown:blp"}], "hash": "8950d050b4a614bb94aa7cfe4ce22c7f", "format-version": 4, "code-base-name": "BackendAPIService", "filename": "BackendAPIService/app/__init__.py", "fields": [{"name": "app = create_app()", "scope": "", "scopeKind": "", "description": "unavailable"}]}
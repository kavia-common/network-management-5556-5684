{"is_source_file": true, "format": "Python", "description": "This is the main initialization module for a Flask-based backend API service, setting up error handling, API configuration, app creation, and health endpoints.", "external_files": ["flask", "flask_cors", "flask_smorest", "dotenv", ".routes.health", ".resources.device_resource", ".config", ".db"], "external_methods": ["load_dotenv", "Flask", "jsonify", "CORS", "Api", "register_blueprint", "init_db", "get_db_mode"], "published": ["create_app"], "classes": [], "methods": [{"name": "None register_error_handlers(app: Flask)", "description": "Registers global error handlers for standard HTTP errors, returning consistent JSON error responses.", "scope": "", "scopeKind": ""}, {"name": "Api create_api(app: Flask)", "description": "Sets up the Flask-Smorest API with OpenAPI documentation and registers blueprints for different API components.", "scope": "", "scopeKind": ""}, {"name": "Flask create_app()", "description": "Factory function that creates and configures the Flask application, including CORS, database, API, error handlers, and health endpoints.", "scope": "", "scopeKind": ""}, {"name": "bad_request(e)", "scope": "register_error_handlers", "scopeKind": "function", "description": "unavailable"}, {"name": "conflict(e)", "scope": "register_error_handlers", "scopeKind": "function", "description": "unavailable"}, {"name": "docs_help()", "scope": "create_app", "scopeKind": "function", "description": "unavailable"}, {"name": "health()", "scope": "create_app", "scopeKind": "function", "description": "unavailable"}, {"name": "internal_server_error(e)", "scope": "register_error_handlers", "scopeKind": "function", "description": "unavailable"}, {"name": "method_not_allowed(e)", "scope": "register_error_handlers", "scopeKind": "function", "description": "unavailable"}, {"name": "not_found(e)", "scope": "register_error_handlers", "scopeKind": "function", "description": "unavailable"}, {"name": "unprocessable(e)", "scope": "register_error_handlers", "scopeKind": "function", "description": "unavailable"}], "calls": ["load_dotenv()", "CORS(app, resources={r\"/*\": {\"origins\": \"*\"}})", "init_db(app)", "get_db_mode()", "create_api(app)", "register_error_handlers(app)", "app.get"], "search-terms": ["create_app", "register_error_handlers", "create_api", "Flask", "app", "Error handlers", "CORS", "Health check"], "state": 2, "file_id": 3, "knowledge_revision": 49, "git_revision": "d1d43c29391203220dd9371de18e2ef73404d66c", "revision_history": [{"12": "e0976d1ef85b45cb351a1f500b12df688fa897d4"}, {"14": "e0976d1ef85b45cb351a1f500b12df688fa897d4"}, {"49": "d1d43c29391203220dd9371de18e2ef73404d66c"}], "ctags": [{"_type": "tag", "name": "app", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/__init__.py", "pattern": "/^    app = create_app()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "bad_request", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/__init__.py", "pattern": "/^    def bad_request(e):$/", "file": true, "language": "Python", "kind": "function", "signature": "(e)", "scope": "register_error_handlers", "scopeKind": "function"}, {"_type": "tag", "name": "conflict", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/__init__.py", "pattern": "/^    def conflict(e):$/", "file": true, "language": "Python", "kind": "function", "signature": "(e)", "scope": "register_error_handlers", "scopeKind": "function"}, {"_type": "tag", "name": "create_api", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/__init__.py", "pattern": "/^def create_api(app: Flask) -> Api:$/", "language": "Python", "typeref": "typename:Api", "kind": "function", "signature": "(app: Flask)"}, {"_type": "tag", "name": "create_app", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/__init__.py", "pattern": "/^def create_app() -> Flask:$/", "language": "Python", "typeref": "typename:Flask", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "devices_blp", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/__init__.py", "pattern": "/^    from .resources.device_resource import blp as devices_blp$/", "file": true, "language": "Python", "kind": "unknown", "scope": "create_api", "scopeKind": "function", "nameref": "unknown:blp"}, {"_type": "tag", "name": "docs_help", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/__init__.py", "pattern": "/^    def docs_help():$/", "file": true, "language": "Python", "kind": "function", "signature": "()", "scope": "create_app", "scopeKind": "function"}, {"_type": "tag", "name": "health", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/__init__.py", "pattern": "/^    def health():$/", "file": true, "language": "Python", "kind": "function", "signature": "()", "scope": "create_app", "scopeKind": "function"}, {"_type": "tag", "name": "health_blp", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/__init__.py", "pattern": "/^    from .routes.health import blp as health_blp$/", "file": true, "language": "Python", "kind": "unknown", "scope": "create_api", "scopeKind": "function", "nameref": "unknown:blp"}, {"_type": "tag", "name": "host", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/__init__.py", "pattern": "/^    host = os.getenv(\"SERVER_HOST\", \"0.0.0.0\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "internal_server_error", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/__init__.py", "pattern": "/^    def internal_server_error(e):$/", "file": true, "language": "Python", "kind": "function", "signature": "(e)", "scope": "register_error_handlers", "scopeKind": "function"}, {"_type": "tag", "name": "method_not_allowed", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/__init__.py", "pattern": "/^    def method_not_allowed(e):$/", "file": true, "language": "Python", "kind": "function", "signature": "(e)", "scope": "register_error_handlers", "scopeKind": "function"}, {"_type": "tag", "name": "not_found", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/__init__.py", "pattern": "/^    def not_found(e):$/", "file": true, "language": "Python", "kind": "function", "signature": "(e)", "scope": "register_error_handlers", "scopeKind": "function"}, {"_type": "tag", "name": "port", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/__init__.py", "pattern": "/^    port = int(os.getenv(\"SERVER_PORT\", \"3001\"))$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "register_error_handlers", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/__init__.py", "pattern": "/^def register_error_handlers(app: Flask) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "(app: Flask)"}, {"_type": "tag", "name": "unprocessable", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/__init__.py", "pattern": "/^    def unprocessable(e):$/", "file": true, "language": "Python", "kind": "function", "signature": "(e)", "scope": "register_error_handlers", "scopeKind": "function"}], "hash": "d746b300ce099c65aedf703840335fe6", "format-version": 4, "code-base-name": "BackendAPIService", "filename": "BackendAPIService/app/__init__.py", "fields": [{"name": "app = create_app()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "host = os.getenv(\"SERVER_HOST\", \"0.0.0.0\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "port = int(os.getenv(\"SERVER_PORT\", \"3001\"))", "scope": "", "scopeKind": "", "description": "unavailable"}]}
{"is_source_file": true, "format": "Python", "description": "This file defines service functions for managing device entities within the backend API. It includes operations for listing, creating, retrieving, updating, deleting, and pinging devices, interacting with a repository layer and performing validation and utility functions.", "external_files": ["../db", "../validators", "../utils"], "external_methods": ["get_repository", "DuplicateIPError", "validate_device_payload", "now_utc", "try_ping"], "published": ["list_devices", "create_device", "get_device", "update_device", "delete_device", "ping_device"], "classes": [], "methods": [{"name": "Tuple[List[Dict[str,Any]],Dict[str,int]] list_devices(filters: Dict[str, Optional[str]], page: int = 1, page_size: int = 20)", "description": "Lists devices with optional filtering and pagination, returning a list of device dicts and pagination info.", "scope": "", "scopeKind": ""}, {"name": "Dict[str,Any] create_device(payload: Dict[str, Any])", "description": "Creates a new device entry after validating the payload; raises an error if validation fails or if IP is duplicate.", "scope": "", "scopeKind": ""}, {"name": "Optional[Dict[str,Any]] get_device(device_id: str)", "description": "Retrieves a device by its unique ID.", "scope": "", "scopeKind": ""}, {"name": "Optional[Dict[str,Any]] update_device(device_id: str, payload: Dict[str, Any])", "description": "Performs a partial update on an existing device identified by ID, validating payload and handling duplicate IP errors.", "scope": "", "scopeKind": ""}, {"name": "bool delete_device(device_id: str)", "description": "Deletes a device by its ID, returning whether the operation was successful.", "scope": "", "scopeKind": ""}, {"name": "Optional[Dict[str,Any]] ping_device(device_id: str)", "description": "Pings the device's IP address, updates its status and last_checked timestamp, and returns the updated device info.", "scope": "", "scopeKind": ""}], "calls": ["get_repository", "validate_device_payload", "now_utc", "try_ping", "repo.list_devices", "repo.create_device", "repo.get_device_by_id", "repo.update_device", "repo.delete_device"], "search-terms": ["device_service", "list_devices", "create_device", "update_device", "ping_device", "device management", "device CRUD", "device repository interactions"], "state": 2, "file_id": 14, "knowledge_revision": 48, "git_revision": "d1d43c29391203220dd9371de18e2ef73404d66c", "revision_history": [{"31": ""}, {"44": "d1d43c29391203220dd9371de18e2ef73404d66c"}, {"48": "d1d43c29391203220dd9371de18e2ef73404d66c"}], "ctags": [{"_type": "tag", "name": "create_device", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/services/device_service.py", "pattern": "/^def create_device(payload: Dict[str, Any]) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "(payload: Dict[str, Any])"}, {"_type": "tag", "name": "delete_device", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/services/device_service.py", "pattern": "/^def delete_device(device_id: str) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "function", "signature": "(device_id: str)"}, {"_type": "tag", "name": "get_device", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/services/device_service.py", "pattern": "/^def get_device(device_id: str) -> Optional[Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:Optional[Dict[str,Any]]", "kind": "function", "signature": "(device_id: str)"}, {"_type": "tag", "name": "list_devices", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/services/device_service.py", "pattern": "/^def list_devices(filters: Dict[str, Optional[str]], page: int = 1, page_size: int = 20) -> Tuple/", "language": "Python", "typeref": "typename:Tuple[List[Dict[str,Any]],Dict[str,int]]", "kind": "function", "signature": "(filters: Dict[str, Optional[str]], page: int = 1, page_size: int = 20)"}, {"_type": "tag", "name": "ping_device", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/services/device_service.py", "pattern": "/^def ping_device(device_id: str) -> Optional[Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:Optional[Dict[str,Any]]", "kind": "function", "signature": "(device_id: str)"}, {"_type": "tag", "name": "update_device", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/services/device_service.py", "pattern": "/^def update_device(device_id: str, payload: Dict[str, Any]) -> Optional[Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:Optional[Dict[str,Any]]", "kind": "function", "signature": "(device_id: str, payload: Dict[str, Any])"}], "hash": "827f9bbef0f615e7a5a23c890d443859", "format-version": 4, "code-base-name": "BackendAPIService", "filename": "BackendAPIService/app/services/device_service.py"}
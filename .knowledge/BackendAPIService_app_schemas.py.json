{"is_source_file": true, "format": "Python", "description": "This file defines Marshmallow schemas for validating, serializing, and deserializing network device data in a backend API. It includes schemas for creating, updating, and outputting device data, as well as validation functions for IP addresses.", "external_files": ["marshmallow"], "external_methods": ["marshalchema.Schema", "marshalchema.fields", "marshalchema.validate", "marshalchema.ValidationError", "marshalchema.pre_dump"], "published": ["serialize_device", "serialize_devices"], "classes": [{"name": "BaseDeviceSchema", "description": "Schema with common device fields and validation."}, {"name": "DeviceCreateSchema", "description": "Schema for creating a new device, inherits from BaseDeviceSchema."}, {"name": "DeviceUpdateSchema", "description": "Schema for updating existing device, all fields optional."}, {"name": "DeviceOutSchema", "description": "Schema for serializing device data for output, maps MongoDB fields."}, {"name": "DeviceListOutSchema", "description": "Schema for outputting a list of devices with pagination info."}, {"name": "ErrorFieldSchema", "description": "Schema for representing field-specific error details."}, {"name": "DuplicateErrorSchema", "description": "Schema for representing duplicate error with nested error details."}], "methods": [{"name": "None _ipv4_validator(value: str)", "description": "Validates an IPv4 address format without external dependencies.", "scope": "", "scopeKind": ""}, {"name": "Dict[str,Any] serialize_device(doc: Dict[str, Any])", "description": "Serializes a MongoDB device document to API format.", "scope": "", "scopeKind": ""}, {"name": "List[Dict[str,Any]] serialize_devices(docs: List[Dict[str, Any]])", "description": "Serializes a list of device documents to API format.", "scope": "", "scopeKind": ""}, {"name": "Dict[str,Any] map_mongo_fields(self, data: Dict[str, Any], **kwargs)", "scope": "DeviceOutSchema", "scopeKind": "class", "description": "unavailable"}], "calls": ["DeviceOutSchema().dump", "DeviceOutSchema(many=True).dump", "datetime.fromisoformat"], "search-terms": ["marshmallow schemas", "device validation", "IPv4 validator", "DeviceOutSchema", "DeviceListOutSchema", "BackendAPIService.schemas"], "state": 2, "file_id": 10, "knowledge_revision": 23, "git_revision": "", "ctags": [{"_type": "tag", "name": "BaseDeviceSchema", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/schemas.py", "pattern": "/^class BaseDeviceSchema(Schema):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "DeviceCreateSchema", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/schemas.py", "pattern": "/^class DeviceCreateSchema(BaseDeviceSchema):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "DeviceListOutSchema", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/schemas.py", "pattern": "/^class DeviceListOutSchema(Schema):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "DeviceOutSchema", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/schemas.py", "pattern": "/^class DeviceOutSchema(Schema):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "DeviceUpdateSchema", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/schemas.py", "pattern": "/^class DeviceUpdateSchema(Schema):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "DuplicateErrorSchema", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/schemas.py", "pattern": "/^class DuplicateErrorSchema(Schema):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "ErrorFieldSchema", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/schemas.py", "pattern": "/^class ErrorFieldSchema(Schema):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "_ipv4_validator", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/schemas.py", "pattern": "/^def _ipv4_validator(value: str) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "(value: str)"}, {"_type": "tag", "name": "created_at", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/schemas.py", "pattern": "/^    created_at = fields.DateTime(required=True, description=\"Creation timestamp (ISO8601)\")$/", "language": "Python", "kind": "variable", "scope": "DeviceOutSchema", "scopeKind": "class"}, {"_type": "tag", "name": "error", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/schemas.py", "pattern": "/^    error = fields.Nested(ErrorFieldSchema, required=True, description=\"Field-level error detail/", "language": "Python", "kind": "variable", "scope": "DuplicateErrorSchema", "scopeKind": "class"}, {"_type": "tag", "name": "field", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/schemas.py", "pattern": "/^    field = fields.String(required=True, description=\"Field name related to the error\")$/", "language": "Python", "kind": "variable", "scope": "ErrorFieldSchema", "scopeKind": "class"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/schemas.py", "pattern": "/^    id = fields.String(required=True, description=\"Device ID (MongoDB ObjectId as string)\")$/", "language": "Python", "kind": "variable", "scope": "DeviceOutSchema", "scopeKind": "class"}, {"_type": "tag", "name": "ip_address", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/schemas.py", "pattern": "/^    ip_address = fields.String(required=True, description=\"Device IPv4 address\")$/", "language": "Python", "kind": "variable", "scope": "DeviceOutSchema", "scopeKind": "class"}, {"_type": "tag", "name": "ip_address", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/schemas.py", "pattern": "/^    ip_address = fields.String(required=True, validate=_ipv4_validator, data_key=\"ip_address\",$/", "language": "Python", "kind": "variable", "scope": "BaseDeviceSchema", "scopeKind": "class"}, {"_type": "tag", "name": "ip_address", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/schemas.py", "pattern": "/^    ip_address = fields.String(validate=_ipv4_validator, data_key=\"ip_address\",$/", "language": "Python", "kind": "variable", "scope": "DeviceUpdateSchema", "scopeKind": "class"}, {"_type": "tag", "name": "items", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/schemas.py", "pattern": "/^    items = fields.List(fields.Nested(DeviceOutSchema), description=\"List of devices\")$/", "language": "Python", "kind": "variable", "scope": "DeviceListOutSchema", "scopeKind": "class"}, {"_type": "tag", "name": "last_checked", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/schemas.py", "pattern": "/^    last_checked = fields.DateTime(allow_none=True, description=\"Last status check timestamp (IS/", "language": "Python", "kind": "variable", "scope": "DeviceOutSchema", "scopeKind": "class"}, {"_type": "tag", "name": "limit", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/schemas.py", "pattern": "/^    limit = fields.Integer(description=\"Page size limit\")$/", "language": "Python", "kind": "variable", "scope": "DeviceListOutSchema", "scopeKind": "class"}, {"_type": "tag", "name": "location", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/schemas.py", "pattern": "/^    location = fields.String(required=True, description=\"Device location\")$/", "language": "Python", "kind": "variable", "scope": "DeviceOutSchema", "scopeKind": "class"}, {"_type": "tag", "name": "location", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/schemas.py", "pattern": "/^    location = fields.String(required=True, validate=validate.Length(min=1), description=\"Device/", "language": "Python", "kind": "variable", "scope": "BaseDeviceSchema", "scopeKind": "class"}, {"_type": "tag", "name": "location", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/schemas.py", "pattern": "/^    location = fields.String(validate=validate.Length(min=1), description=\"Device location\")$/", "language": "Python", "kind": "variable", "scope": "DeviceUpdateSchema", "scopeKind": "class"}, {"_type": "tag", "name": "map_mongo_fields", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/schemas.py", "pattern": "/^    def map_mongo_fields(self, data: Dict[str, Any], **kwargs) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, data: Dict[str, Any], **kwargs)", "scope": "DeviceOutSchema", "scopeKind": "class"}, {"_type": "tag", "name": "message", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/schemas.py", "pattern": "/^    message = fields.String(required=True, description=\"Human readable error message\")$/", "language": "Python", "kind": "variable", "scope": "ErrorFieldSchema", "scopeKind": "class"}, {"_type": "tag", "name": "name", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/schemas.py", "pattern": "/^    name = fields.String(required=True, description=\"Device name\")$/", "language": "Python", "kind": "variable", "scope": "DeviceOutSchema", "scopeKind": "class"}, {"_type": "tag", "name": "name", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/schemas.py", "pattern": "/^    name = fields.String(required=True, validate=validate.Length(min=1), description=\"Device nam/", "language": "Python", "kind": "variable", "scope": "BaseDeviceSchema", "scopeKind": "class"}, {"_type": "tag", "name": "name", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/schemas.py", "pattern": "/^    name = fields.String(validate=validate.Length(min=1), description=\"Device name\")$/", "language": "Python", "kind": "variable", "scope": "DeviceUpdateSchema", "scopeKind": "class"}, {"_type": "tag", "name": "page", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/schemas.py", "pattern": "/^    page = fields.Integer(description=\"Current page number (1-based)\")$/", "language": "Python", "kind": "variable", "scope": "DeviceListOutSchema", "scopeKind": "class"}, {"_type": "tag", "name": "serialize_device", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/schemas.py", "pattern": "/^def serialize_device(doc: Dict[str, Any]) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "(doc: Dict[str, Any])"}, {"_type": "tag", "name": "serialize_devices", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/schemas.py", "pattern": "/^def serialize_devices(docs: List[Dict[str, Any]]) -> List[Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:List[Dict[str,Any]]", "kind": "function", "signature": "(docs: List[Dict[str, Any]])"}, {"_type": "tag", "name": "status", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/schemas.py", "pattern": "/^    status = fields.String(required=True, description=\"Device status\")$/", "language": "Python", "kind": "variable", "scope": "DeviceOutSchema", "scopeKind": "class"}, {"_type": "tag", "name": "status", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/schemas.py", "pattern": "/^    status = fields.String(required=True, validate=validate.OneOf([\"online\", \"offline\", \"unknown/", "language": "Python", "kind": "variable", "scope": "BaseDeviceSchema", "scopeKind": "class"}, {"_type": "tag", "name": "status", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/schemas.py", "pattern": "/^    status = fields.String(validate=validate.OneOf([\"online\", \"offline\", \"unknown\"]), descriptio/", "language": "Python", "kind": "variable", "scope": "DeviceUpdateSchema", "scopeKind": "class"}, {"_type": "tag", "name": "total", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/schemas.py", "pattern": "/^    total = fields.Integer(description=\"Total items available\")$/", "language": "Python", "kind": "variable", "scope": "DeviceListOutSchema", "scopeKind": "class"}, {"_type": "tag", "name": "type", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/schemas.py", "pattern": "/^    type = fields.String(required=True, description=\"Device type\")$/", "language": "Python", "kind": "variable", "scope": "DeviceOutSchema", "scopeKind": "class"}, {"_type": "tag", "name": "type", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/schemas.py", "pattern": "/^    type = fields.String(required=True, validate=validate.OneOf([\"router\", \"switch\", \"server\"]),$/", "language": "Python", "kind": "variable", "scope": "BaseDeviceSchema", "scopeKind": "class"}, {"_type": "tag", "name": "type", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/schemas.py", "pattern": "/^    type = fields.String(validate=validate.OneOf([\"router\", \"switch\", \"server\"]), description=\"D/", "language": "Python", "kind": "variable", "scope": "DeviceUpdateSchema", "scopeKind": "class"}, {"_type": "tag", "name": "updated_at", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/schemas.py", "pattern": "/^    updated_at = fields.DateTime(required=True, description=\"Last update timestamp (ISO8601)\")$/", "language": "Python", "kind": "variable", "scope": "DeviceOutSchema", "scopeKind": "class"}], "hash": "32b8de17043c3454267032c44ce24445", "format-version": 4, "code-base-name": "BackendAPIService", "filename": "BackendAPIService/app/schemas.py", "fields": [{"name": "created_at = fields.DateTime(required=True, description=\"Creation timestamp (ISO8601)\")", "scope": "DeviceOutSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "error = fields.Nested(ErrorFieldSchema, required=True, description=\"Field-level error detail/", "scope": "DuplicateErrorSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "field = fields.String(required=True, description=\"Field name related to the error\")", "scope": "ErrorFieldSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "id = fields.String(required=True, description=\"Device ID (MongoDB ObjectId as string)\")", "scope": "DeviceOutSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "ip_address = fields.String(required=True, description=\"Device IPv4 address\")", "scope": "DeviceOutSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "ip_address = fields.String(required=True, validate=_ipv4_validator, data_key=\"ip_address\",", "scope": "BaseDeviceSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "ip_address = fields.String(validate=_ipv4_validator, data_key=\"ip_address\",", "scope": "DeviceUpdateSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "items = fields.List(fields.Nested(DeviceOutSchema), description=\"List of devices\")", "scope": "DeviceListOutSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "last_checked = fields.DateTime(allow_none=True, description=\"Last status check timestamp (IS/", "scope": "DeviceOutSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "limit = fields.Integer(description=\"Page size limit\")", "scope": "DeviceListOutSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "location = fields.String(required=True, description=\"Device location\")", "scope": "DeviceOutSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "location = fields.String(required=True, validate=validate.Length(min=1), description=\"Device/", "scope": "BaseDeviceSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "location = fields.String(validate=validate.Length(min=1), description=\"Device location\")", "scope": "DeviceUpdateSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "message = fields.String(required=True, description=\"Human readable error message\")", "scope": "ErrorFieldSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "name = fields.String(required=True, description=\"Device name\")", "scope": "DeviceOutSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "name = fields.String(required=True, validate=validate.Length(min=1), description=\"Device nam/", "scope": "BaseDeviceSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "name = fields.String(validate=validate.Length(min=1), description=\"Device name\")", "scope": "DeviceUpdateSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "page = fields.Integer(description=\"Current page number (1-based)\")", "scope": "DeviceListOutSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "status = fields.String(required=True, description=\"Device status\")", "scope": "DeviceOutSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "status = fields.String(required=True, validate=validate.OneOf([\"online\", \"offline\", \"unknown/", "scope": "BaseDeviceSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "status = fields.String(validate=validate.OneOf([\"online\", \"offline\", \"unknown\"]), descriptio/", "scope": "DeviceUpdateSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "total = fields.Integer(description=\"Total items available\")", "scope": "DeviceListOutSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "type = fields.String(required=True, description=\"Device type\")", "scope": "DeviceOutSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "type = fields.String(required=True, validate=validate.OneOf([\"router\", \"switch\", \"server\"]),", "scope": "BaseDeviceSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "type = fields.String(validate=validate.OneOf([\"router\", \"switch\", \"server\"]), description=\"D/", "scope": "DeviceUpdateSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "updated_at = fields.DateTime(required=True, description=\"Last update timestamp (ISO8601)\")", "scope": "DeviceOutSchema", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"23": ""}]}
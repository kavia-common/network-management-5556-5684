{"is_source_file": true, "format": "Python", "description": "This file provides a wrapper class for managing MongoDB database connections and operations in a Flask application, including index creation and object ID utilities.", "external_files": ["pymongo", "pymongo.errors", "flask", "bson"], "external_methods": ["pymongo.MongoClient", "pymongo.ASCENDING", "pymongo.errors.PyMongoError", "flask.current_app", "bson.ObjectId", "bson.ObjectId.is_valid"], "published": ["get_db"], "classes": [{"name": "Database", "description": "A wrapper class to handle MongoDB connection, index creation, and common operations."}], "methods": [{"name": "__init__(self, uri: str, db_name: str, tls: bool = False, username: Optional[str] = None, password: Optional[str] = None)", "description": "Initializes the Database instance with connection parameters.", "scope": "Database", "scopeKind": "class"}, {"name": "connect(self)", "description": "Establishes connection to MongoDB and creates necessary indexes.", "scope": "Database", "scopeKind": "class"}, {"name": "_create_indexes(self)", "description": "Creates indexes for the devices collection in the database.", "scope": "Database", "scopeKind": "class"}, {"name": "db(self)", "description": "Property that returns the database object, raises error if not connected.", "scope": "Database", "scopeKind": "class"}, {"name": "devices(self)", "description": "Property to access the devices collection.", "scope": "Database", "scopeKind": "class"}, {"name": "ObjectId to_object_id(id_str: str)", "description": "Converts a string into an ObjectId, raises ValueError if invalid.", "scope": "Database", "scopeKind": "class"}, {"name": "Database get_db()", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["MongoClient(self._uri, **kwargs)", "self.devices.create_index([(\"ip_address\", ASCENDING)], unique=True, name=\"uniq_ip\")", "self.devices.create_index([(\"type\", ASCENDING)], name=\"idx_type\")", "self.devices.create_index([(\"status\", ASCENDING)], name=\"idx_status\")", "ObjectId.is_valid(id_str)", "ObjectId(id_str)", "current_app.extensions[\"db_instance\"]"], "search-terms": ["MongoDB connection wrapper", "Flask database extension", "Index creation for devices", "ObjectId utility", "Mongo index management"], "state": 2, "file_id": 8, "knowledge_revision": 17, "git_revision": "", "ctags": [{"_type": "tag", "name": "Database", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/db.py", "pattern": "/^class Database:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/db.py", "pattern": "/^    def __init__(self, uri: str, db_name: str, tls: bool = False, username: Optional[str] = None/", "language": "Python", "kind": "member", "signature": "(self, uri: str, db_name: str, tls: bool = False, username: Optional[str] = None, password: Optional[str] = None)", "scope": "Database", "scopeKind": "class"}, {"_type": "tag", "name": "_create_indexes", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/db.py", "pattern": "/^    def _create_indexes(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "Database", "scopeKind": "class"}, {"_type": "tag", "name": "connect", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/db.py", "pattern": "/^    def connect(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "Database", "scopeKind": "class"}, {"_type": "tag", "name": "db", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/db.py", "pattern": "/^    def db(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "Database", "scopeKind": "class"}, {"_type": "tag", "name": "devices", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/db.py", "pattern": "/^    def devices(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "Database", "scopeKind": "class"}, {"_type": "tag", "name": "get_db", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/db.py", "pattern": "/^def get_db() -> Database:$/", "language": "Python", "typeref": "typename:Database", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "to_object_id", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/db.py", "pattern": "/^    def to_object_id(id_str: str) -> ObjectId:$/", "language": "Python", "typeref": "typename:ObjectId", "kind": "member", "signature": "(id_str: str)", "scope": "Database", "scopeKind": "class"}], "hash": "1e2b8325bb6701783f2d6ce3fe2e7512", "format-version": 4, "code-base-name": "BackendAPIService", "filename": "BackendAPIService/app/db.py", "revision_history": [{"17": ""}]}
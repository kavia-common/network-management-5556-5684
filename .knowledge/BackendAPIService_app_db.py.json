{"is_source_file": true, "format": "Python", "description": "This file provides utility functions to manage MongoDB connections, including singleton initialization, index creation, and environment-based configuration. It is part of a backend service interacting with a network devices database.", "external_files": ["pymongo"], "external_methods": ["pymongo.MongoClient", "pymongo.ASCENDING", "pymongo.collection.Collection", "pymongo.database.Database"], "published": ["get_client", "get_db", "get_collection"], "classes": [], "methods": [{"name": "MongoClient _build_mongo_client()", "description": "Creates a MongoClient instance configured with environment variables for URI, TLS, and timeout.", "scope": "", "scopeKind": ""}, {"name": "None _ensure_indexes(db: Database)", "description": "Ensures indexes on the 'devices' collection: unique index on 'ip_address', and indexes on 'type' and 'status'.", "scope": "", "scopeKind": ""}, {"name": "MongoClient get_client()", "description": "Returns a singleton MongoClient, initializing it if necessary, and sets up the database and indexes.", "scope": "", "scopeKind": ""}, {"name": "Database get_db()", "description": "Returns the MongoDB Database object, initializing the client if it has not been already initialized.", "scope": "", "scopeKind": ""}, {"name": "Collection get_collection(name: str)", "description": "Returns a specific collection from the default database.", "scope": "", "scopeKind": ""}], "calls": ["os.environ.get", "MongoClient", "create_index", "get_db"], "search-terms": ["MongoDB connection", "index setup for devices", "singleton MongoClient", "environment variable configuration", "MongoDB index names"], "state": 2, "file_id": 7, "knowledge_revision": 15, "git_revision": "", "ctags": [{"_type": "tag", "name": "DEFAULT_DB_NAME", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/db.py", "pattern": "/^DEFAULT_DB_NAME = \"network_devices\"$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "DEVICES_COLLECTION", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/db.py", "pattern": "/^DEVICES_COLLECTION = \"devices\"$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "_build_mongo_client", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/db.py", "pattern": "/^def _build_mongo_client() -> MongoClient:$/", "language": "Python", "typeref": "typename:MongoClient", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "_client", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/db.py", "pattern": "/^_client: Optional[MongoClient] = None$/", "language": "Python", "typeref": "typename:Optional[MongoClient]", "kind": "variable"}, {"_type": "tag", "name": "_client_lock", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/db.py", "pattern": "/^_client_lock = threading.Lock()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "_db", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/db.py", "pattern": "/^_db: Optional[Database] = None$/", "language": "Python", "typeref": "typename:Optional[Database]", "kind": "variable"}, {"_type": "tag", "name": "_ensure_indexes", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/db.py", "pattern": "/^def _ensure_indexes(db: Database) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "(db: Database)"}, {"_type": "tag", "name": "get_client", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/db.py", "pattern": "/^def get_client() -> MongoClient:$/", "language": "Python", "typeref": "typename:MongoClient", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_collection", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/db.py", "pattern": "/^def get_collection(name: str) -> Collection:$/", "language": "Python", "typeref": "typename:Collection", "kind": "function", "signature": "(name: str)"}, {"_type": "tag", "name": "get_db", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/db.py", "pattern": "/^def get_db() -> Database:$/", "language": "Python", "typeref": "typename:Database", "kind": "function", "signature": "()"}], "hash": "394bcaa519f0b324b42a980d69a478a0", "format-version": 4, "code-base-name": "BackendAPIService", "filename": "BackendAPIService/app/db.py", "fields": [{"name": "DEFAULT_DB_NAME = \"network_devices\"", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "DEVICES_COLLECTION = \"devices\"", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "Optional[MongoClient] _client", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "_client_lock = threading.Lock()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "Optional[Database] _db", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"15": ""}]}
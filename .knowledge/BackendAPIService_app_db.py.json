{"is_source_file": true, "format": "Python", "description": "This file provides a Python module for managing MongoDB database connections, including singleton client initialization, index setup, and access to collections and database instances. It encapsulates environment-based configuration and index management for a 'network_devices' database.", "external_files": ["pymongo", "pymongo.collection", "pymongo.database", "os", "threading", "typing"], "external_methods": ["os.environ.get", "threading.Lock", "MongoClient", "Collection", "Database"], "published": ["get_client", "get_db", "get_collection"], "classes": [], "methods": [{"name": "_build_mongo_client", "description": "Constructs a MongoClient instance based on environment variables, including optional TLS and connection timeout settings."}, {"name": "_ensure_indexes", "description": "Ensures that the 'devices' collection has the required indexes: unique index on 'ip_address', and non-unique indexes on 'type' and 'status'."}, {"name": "get_client", "description": "Returns a singleton MongoClient instance, initializing it if necessary, and sets up the database and indexes."}, {"name": "get_db", "description": "Returns the singleton Database instance, initializing the client if needed."}, {"name": "get_collection", "description": "Returns a collection object from the default database by name."}], "calls": ["os.environ.get", "_build_mongo_client", "_ensure_indexes", "get_client"], "search-terms": ["MongoDB connection", "index setup", "singleton database client", "environment configuration", "network_devices database"], "state": 2, "file_id": 7, "knowledge_revision": 49, "git_revision": "4aec4babf8e89e23220e5a73b08a59ced77c5faf", "revision_history": [{"15": ""}, {"21": "4aec4babf8e89e23220e5a73b08a59ced77c5faf"}, {"49": "4aec4babf8e89e23220e5a73b08a59ced77c5faf"}], "ctags": [], "filename": "BackendAPIService/app/db.py", "format-version": 4, "code-base-name": "https://github.com/kavia-common/network-management-5556-5684.git:kavia-main"}
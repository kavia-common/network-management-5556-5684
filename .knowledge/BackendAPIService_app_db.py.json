{"is_source_file": true, "format": "Python", "description": "This file provides utility functions and singleton accessors for connecting to a MongoDB database within a networking management backend. It handles environment variable configuration, connection initialization, index setup, and health checks for the MongoDB database used to store device information.", "external_files": ["pymongo", "os", "threading", "urllib.parse", "typing"], "external_methods": ["pymongo.MongoClient", "pymongo.collection.Collection", "pymongo.database.Database", "pymongo.errors.PyMongoError"], "published": ["get_client", "get_db", "get_collection", "ping"], "classes": [], "methods": [{"name": "bool _env_bool(value: Optional[str])", "description": "Parses a string environment variable value to a boolean.", "scope": "", "scopeKind": ""}, {"name": "Tuple[str,str] _build_uri_from_parts()", "description": "Constructs a MongoDB URI from individual environment variables when MONGODB_URI is not provided.", "scope": "", "scopeKind": ""}, {"name": "Tuple[MongoClient,str] _build_mongo_client()", "description": "Creates a MongoClient instance based on environment variables, preferring MONGODB_URI if available.", "scope": "", "scopeKind": ""}, {"name": "None _ensure_indexes(db: Database)", "description": "Sets up required indexes on the 'devices' collection to enforce uniqueness and improve query performance.", "scope": "", "scopeKind": ""}, {"name": "MongoClient get_client()", "description": "Returns a singleton MongoClient, initializing connection and verifying availability on first call.", "scope": "", "scopeKind": ""}, {"name": "Database get_db()", "description": "Returns the singleton Database object, initializing connection if necessary.", "scope": "", "scopeKind": ""}, {"name": "Collection get_collection(name: str)", "description": "Provides access to a specific collection within the database by name.", "scope": "", "scopeKind": ""}, {"name": "Tuple[bool,Optional[str]] ping()", "description": "Checks the health/status of the MongoDB connection, returning success or error message.", "scope": "", "scopeKind": ""}], "calls": ["client.admin.command(\"ping\")"], "search-terms": ["MongoDB connection", "device indexes", "environment variable configuration", "singleton MongoClient", "backend database utility"], "state": 2, "file_id": 7, "knowledge_revision": 38, "git_revision": "4aec4babf8e89e23220e5a73b08a59ced77c5faf", "revision_history": [{"15": ""}, {"21": "4aec4babf8e89e23220e5a73b08a59ced77c5faf"}, {"38": "4aec4babf8e89e23220e5a73b08a59ced77c5faf"}], "ctags": [{"_type": "tag", "name": "DEFAULT_DB_NAME", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/db.py", "pattern": "/^DEFAULT_DB_NAME = \"network_devices\"$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "DEVICES_COLLECTION", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/db.py", "pattern": "/^DEVICES_COLLECTION = \"devices\"$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "_build_mongo_client", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/db.py", "pattern": "/^def _build_mongo_client() -> Tuple[MongoClient, str]:$/", "language": "Python", "typeref": "typename:Tuple[MongoClient,str]", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "_build_uri_from_parts", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/db.py", "pattern": "/^def _build_uri_from_parts() -> Tuple[str, str]:$/", "language": "Python", "typeref": "typename:Tuple[str,str]", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "_client", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/db.py", "pattern": "/^_client: Optional[MongoClient] = None$/", "language": "Python", "typeref": "typename:Optional[MongoClient]", "kind": "variable"}, {"_type": "tag", "name": "_client_lock", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/db.py", "pattern": "/^_client_lock = threading.Lock()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "_db", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/db.py", "pattern": "/^_db: Optional[Database] = None$/", "language": "Python", "typeref": "typename:Optional[Database]", "kind": "variable"}, {"_type": "tag", "name": "_ensure_indexes", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/db.py", "pattern": "/^def _ensure_indexes(db: Database) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "(db: Database)"}, {"_type": "tag", "name": "_env_bool", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/db.py", "pattern": "/^def _env_bool(value: Optional[str]) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "function", "signature": "(value: Optional[str])"}, {"_type": "tag", "name": "get_client", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/db.py", "pattern": "/^def get_client() -> MongoClient:$/", "language": "Python", "typeref": "typename:MongoClient", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_collection", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/db.py", "pattern": "/^def get_collection(name: str) -> Collection:$/", "language": "Python", "typeref": "typename:Collection", "kind": "function", "signature": "(name: str)"}, {"_type": "tag", "name": "get_db", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/db.py", "pattern": "/^def get_db() -> Database:$/", "language": "Python", "typeref": "typename:Database", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "ping", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/db.py", "pattern": "/^def ping() -> Tuple[bool, Optional[str]]:$/", "language": "Python", "typeref": "typename:Tuple[bool,Optional[str]]", "kind": "function", "signature": "()"}], "hash": "5d7461831f4262e85b3f01b27e5d9c1f", "format-version": 4, "code-base-name": "BackendAPIService", "filename": "BackendAPIService/app/db.py", "fields": [{"name": "DEFAULT_DB_NAME = \"network_devices\"", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "DEVICES_COLLECTION = \"devices\"", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "Optional[MongoClient] _client", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "_client_lock = threading.Lock()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "Optional[Database] _db", "scope": "", "scopeKind": "", "description": "unavailable"}]}
{"is_source_file": true, "format": "Python", "description": "This file defines a Database class for managing MongoDB connections and operations, including index creation and object ID conversion, used by a Flask web application.", "external_files": ["pymongo", "flask", "bson"], "external_methods": ["MongoClient", "ObjectId.is_valid"], "published": ["get_db"], "classes": [{"name": "Database", "description": "A wrapper class for MongoDB client management, database connection, and index setup."}], "methods": [{"name": "__init__(self, uri: str, db_name: str, tls: bool = False, username: Optional[str] = None, password: Optional[str] = None)", "description": "Initializes the Database instance with connection parameters.", "scope": "Database", "scopeKind": "class"}, {"name": "connect(self)", "description": "Establishes connection to MongoDB and creates indexes.", "scope": "Database", "scopeKind": "class"}, {"name": "_create_indexes(self)", "description": "Creates indexes on the devices collection.", "scope": "Database", "scopeKind": "class"}, {"name": "db(self)", "description": "Property that returns the current database object, raises error if not connected.", "scope": "Database", "scopeKind": "class"}, {"name": "devices(self)", "description": "Property that returns the 'devices' collection.", "scope": "Database", "scopeKind": "class"}, {"name": "ObjectId to_object_id(id_str: str)", "description": "Converts a string to an ObjectId, raising ValueError if invalid.", "scope": "Database", "scopeKind": "class"}, {"name": "Database get_db()", "description": "Function to retrieve the Database instance from Flask's app context.", "scope": "", "scopeKind": ""}], "calls": ["MongoClient", "ObjectId.is_valid", "current_app.extensions"], "search-terms": ["MongoDB connection management", "Flask database extension", "Indexes creation for devices", "ObjectId conversion", "MongoDB index names"], "state": 2, "file_id": 8, "knowledge_revision": 35, "git_revision": "1abba53b5a158a0036e722b1cf9e284b7b36126c", "revision_history": [{"17": ""}, {"35": "1abba53b5a158a0036e722b1cf9e284b7b36126c"}], "ctags": [{"_type": "tag", "name": "Database", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/db.py", "pattern": "/^class Database:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/db.py", "pattern": "/^    def __init__(self, uri: str, db_name: str, tls: bool = False, username: Optional[str] = None/", "language": "Python", "kind": "member", "signature": "(self, uri: str, db_name: str, tls: bool = False, username: Optional[str] = None, password: Optional[str] = None)", "scope": "Database", "scopeKind": "class"}, {"_type": "tag", "name": "_create_indexes", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/db.py", "pattern": "/^    def _create_indexes(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "Database", "scopeKind": "class"}, {"_type": "tag", "name": "connect", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/db.py", "pattern": "/^    def connect(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "Database", "scopeKind": "class"}, {"_type": "tag", "name": "db", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/db.py", "pattern": "/^    def db(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "Database", "scopeKind": "class"}, {"_type": "tag", "name": "devices", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/db.py", "pattern": "/^    def devices(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "Database", "scopeKind": "class"}, {"_type": "tag", "name": "get_db", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/db.py", "pattern": "/^def get_db() -> Database:$/", "language": "Python", "typeref": "typename:Database", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "to_object_id", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/db.py", "pattern": "/^    def to_object_id(id_str: str) -> ObjectId:$/", "language": "Python", "typeref": "typename:ObjectId", "kind": "member", "signature": "(id_str: str)", "scope": "Database", "scopeKind": "class"}], "hash": "b17303cd6c7939833818aaa07b44c36a", "format-version": 4, "code-base-name": "BackendAPIService", "filename": "BackendAPIService/app/db.py"}
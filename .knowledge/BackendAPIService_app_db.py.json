{"is_source_file": true, "format": "Python", "description": "This file provides database connection utilities and index initialization for a MongoDB database, specifically handling environment-based configuration, index setup on a 'devices' collection, and timestamp attachment for payloads.", "external_files": [".env", "pymongo", "dotenv"], "external_methods": ["MongoClient", "PyMongoError", "load_dotenv"], "published": ["get_mongo_client", "get_database", "init_indexes", "with_timestamps"], "classes": [], "methods": [{"name": "MongoClient get_mongo_client()", "description": "Returns a configured MongoClient instance based on environment variables, handling optional TLS settings.", "scope": "", "scopeKind": ""}, {"name": "get_database(client: MongoClient)", "description": "Retrieves the specific MongoDB database object using environment variable for the database name.", "scope": "", "scopeKind": ""}, {"name": "Tuple[bool,Optional[str]] init_indexes(db)", "description": "Creates indexes on the 'devices' collection to enforce uniqueness and improve query performance.", "scope": "", "scopeKind": ""}, {"name": "dict with_timestamps(payload: dict, is_create: bool = True)", "description": "Adds ISO-formatted created_at and updated_at timestamps to a provided payload dictionary.", "scope": "", "scopeKind": ""}, {"name": "bool _get_bool_env(name: str, default: bool = False)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["os.getenv", "MongoClient", "db.__getitem__ (db[<name>])", "create_index"], "search-terms": ["MongoDB", "indexes", "environment variables", "timestamp", "devices collection"], "state": 2, "file_id": 7, "knowledge_revision": 15, "git_revision": "", "ctags": [{"_type": "tag", "name": "_get_bool_env", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/db.py", "pattern": "/^def _get_bool_env(name: str, default: bool = False) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "function", "signature": "(name: str, default: bool = False)"}, {"_type": "tag", "name": "get_database", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/db.py", "pattern": "/^def get_database(client: MongoClient):$/", "language": "Python", "kind": "function", "signature": "(client: MongoClient)"}, {"_type": "tag", "name": "get_mongo_client", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/db.py", "pattern": "/^def get_mongo_client() -> MongoClient:$/", "language": "Python", "typeref": "typename:MongoClient", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "init_indexes", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/db.py", "pattern": "/^def init_indexes(db) -> Tuple[bool, Optional[str]]:$/", "language": "Python", "typeref": "typename:Tuple[bool,Optional[str]]", "kind": "function", "signature": "(db)"}, {"_type": "tag", "name": "with_timestamps", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/db.py", "pattern": "/^def with_timestamps(payload: dict, is_create: bool = True) -> dict:$/", "language": "Python", "typeref": "typename:dict", "kind": "function", "signature": "(payload: dict, is_create: bool = True)"}], "hash": "be9f3b80f1f611ac95a7bccf39d43e45", "format-version": 4, "code-base-name": "BackendAPIService", "filename": "BackendAPIService/app/db.py", "revision_history": [{"15": ""}]}
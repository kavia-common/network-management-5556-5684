{"is_source_file": true, "format": "Python", "description": "This is the __init__.py file for a Flask-based backend API service. It initializes the Flask app, configures CORS and API documentation, imports route blueprints, and sets up the API object.", "external_files": ["flask", "flask_cors", "flask_smorest", ".routes"], "external_methods": ["Flask()", "CORS()", "Api()", "app.config[]", "api.register_blueprint()"], "published": ["app"], "classes": [], "methods": [], "calls": ["Flask(__name__)", "CORS(app, resources={r\"/*\": {\"origins\": \"*\"}})", "Api(app)", "api.register_blueprint(health_blp)", "api.register_blueprint(devices_blp)"], "search-terms": ["Flask app initialization", "API configuration", "CORS setup", "blueprint registration", "OpenAPI / Swagger UI setup"], "state": 2, "file_id": 4, "knowledge_revision": 28, "git_revision": "4aec4babf8e89e23220e5a73b08a59ced77c5faf", "revision_history": [{"11": "c0b308fc482835bb2490f37d815ddc2380ae160c"}, {"16": "c0b308fc482835bb2490f37d815ddc2380ae160c"}, {"28": "4aec4babf8e89e23220e5a73b08a59ced77c5faf"}], "ctags": [{"_type": "tag", "name": "_db", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/__init__.py", "pattern": "/^from . import db as _db  # noqa: F401$/", "language": "Python", "kind": "unknown", "nameref": "unknown:db"}, {"_type": "tag", "name": "api", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/__init__.py", "pattern": "/^api = Api(app)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "app", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/__init__.py", "pattern": "/^app = Flask(__name__)$/", "language": "Python", "kind": "variable"}], "hash": "1f8d9e8e2c00a1f49c1982f7a12b8652", "format-version": 4, "code-base-name": "BackendAPIService", "filename": "BackendAPIService/app/__init__.py", "fields": [{"name": "api = Api(app)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "app = Flask(__name__)", "scope": "", "scopeKind": "", "description": "unavailable"}]}
{"is_source_file": true, "format": "Python", "description": "This file defines REST API endpoints for CRUD and operational management of device resources, including listing, creation, retrieval, updating, deletion, and pinging devices. It uses Flask along with Flask-Smorest, MongoDB, and custom validation and utility functions.", "external_files": ["app.db", "app.models.device_schema", "app.utils.errors", "app.utils.ping"], "external_methods": ["get_db", "serialize_device", "validate_device_payload", "error_response", "ping_host"], "published": ["blp", "DeviceList", "DeviceDetail", "DevicePing"], "classes": [{"name": "DeviceList", "description": "Handles listing and creation of device resources via GET and POST methods."}, {"name": "DeviceDetail", "description": "Handles retrieval, update, and deletion of individual devices via GET, PUT, and DELETE methods."}, {"name": "DevicePing", "description": "Handles pinging a device and updating its status and last checked timestamp."}], "methods": [{"name": "get(self)", "description": "Lists devices with optional filtering by type and status.", "scope": "DeviceList", "scopeKind": "class"}, {"name": "post(self)", "description": "Creates a new device after validating payload.", "scope": "DeviceList", "scopeKind": "class"}, {"name": "get(self, device_id: str)", "description": "Retrieves a device by its ID.", "scope": "DeviceDetail", "scopeKind": "class"}, {"name": "put(self, device_id: str)", "description": "Updates an existing device with provided fields.", "scope": "DeviceDetail", "scopeKind": "class"}, {"name": "delete(self, device_id: str)", "description": "Deletes a device by ID.", "scope": "DeviceDetail", "scopeKind": "class"}, {"name": "post(self, device_id: str)", "description": "Pings a device by ID, updating its online status and last checked timestamp.", "scope": "DevicePing", "scopeKind": "class"}], "calls": ["get_db", "serialize_device", "validate_device_payload", "error_response", "db.to_object_id", "db.devices.find_one", "db.devices.insert_one", "db.devices.find_one_and_update", "db.devices.delete_one", "ping_host", "current_app.config.get"], "search-terms": ["Device API", "Device CRUD endpoints", "Flask device resource", "ping device", "device_status", "device_schema"], "state": 2, "file_id": 12, "knowledge_revision": 36, "git_revision": "1abba53b5a158a0036e722b1cf9e284b7b36126c", "revision_history": [{"25": ""}, {"36": "1abba53b5a158a0036e722b1cf9e284b7b36126c"}], "ctags": [{"_type": "tag", "name": "DeviceDetail", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/resources/devices.py", "pattern": "/^class DeviceDetail(MethodView):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "DeviceList", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/resources/devices.py", "pattern": "/^class DeviceList(MethodView):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "DevicePing", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/resources/devices.py", "pattern": "/^class DevicePing(MethodView):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "blp", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/resources/devices.py", "pattern": "/^blp = Blueprint($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "delete", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/resources/devices.py", "pattern": "/^    def delete(self, device_id: str):$/", "language": "Python", "kind": "member", "signature": "(self, device_id: str)", "scope": "DeviceDetail", "scopeKind": "class"}, {"_type": "tag", "name": "get", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/resources/devices.py", "pattern": "/^    def get(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "DeviceList", "scopeKind": "class"}, {"_type": "tag", "name": "get", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/resources/devices.py", "pattern": "/^    def get(self, device_id: str):$/", "language": "Python", "kind": "member", "signature": "(self, device_id: str)", "scope": "DeviceDetail", "scopeKind": "class"}, {"_type": "tag", "name": "post", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/resources/devices.py", "pattern": "/^    def post(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "DeviceList", "scopeKind": "class"}, {"_type": "tag", "name": "post", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/resources/devices.py", "pattern": "/^    def post(self, device_id: str):$/", "language": "Python", "kind": "member", "signature": "(self, device_id: str)", "scope": "DevicePing", "scopeKind": "class"}, {"_type": "tag", "name": "put", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/resources/devices.py", "pattern": "/^    def put(self, device_id: str):$/", "language": "Python", "kind": "member", "signature": "(self, device_id: str)", "scope": "DeviceDetail", "scopeKind": "class"}], "hash": "e8f8b83bc50d97c17e92b32555e5a78d", "format-version": 4, "code-base-name": "BackendAPIService", "filename": "BackendAPIService/app/resources/devices.py", "fields": [{"name": "blp = Blueprint(", "scope": "", "scopeKind": "", "description": "unavailable"}]}
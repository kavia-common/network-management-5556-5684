{"is_source_file": true, "format": "Python", "description": "This Python source file defines REST API endpoints for device management, including listing, creating, retrieving, updating, deleting, and pinging devices. It uses Flask and Flask-Smorest for API and route handling, and interfaces with MongoDB for data storage.", "external_files": ["app.db", "app.models.device_schema", "app.utils.errors", "app.utils.ping"], "external_methods": ["get_db", "Database.to_object_id", "validate_device_payload", "serialize_device", "error_response", "ping_host"], "published": ["DeviceList", "DeviceDetail", "DevicePing"], "classes": [{"name": "DeviceList", "description": "API resource for listing and creating devices."}, {"name": "DeviceDetail", "description": "API resource for retrieving, updating, and deleting a specific device."}, {"name": "DevicePing", "description": "API resource for pinging a device to update its online status."}], "methods": [{"name": "get(self)", "description": "Lists devices with optional filters for type and status.", "scope": "DeviceList", "scopeKind": "class"}, {"name": "post(self)", "description": "Creates a new device with provided payload.", "scope": "DeviceList", "scopeKind": "class"}, {"name": "get(self, device_id: str)", "description": "Retrieves a device by its ID.", "scope": "DeviceDetail", "scopeKind": "class"}, {"name": "put(self, device_id: str)", "description": "Updates an existing device identified by ID.", "scope": "DeviceDetail", "scopeKind": "class"}, {"name": "delete(self, device_id: str)", "description": "Deletes a device by ID.", "scope": "DeviceDetail", "scopeKind": "class"}, {"name": "post(self, device_id: str)", "description": "Pings a device by ID to check if it's online, updates status and last checked timestamp.", "scope": "DevicePing", "scopeKind": "class"}], "calls": ["get_db", "validate_device_payload", "serialize_device", "error_response", "db.to_object_id", "db.devices.find_one", "db.devices.insert_one", "db.devices.find_one_and_update", "db.devices.delete_one", "ping_host"], "search-terms": ["flask_resources_devices", "device CRUD endpoints", "device ping operation", "MongoDB device storage", "DeviceList", "DeviceDetail", "DevicePing"], "state": 2, "file_id": 12, "knowledge_revision": 25, "git_revision": "", "ctags": [{"_type": "tag", "name": "DeviceDetail", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/resources/devices.py", "pattern": "/^class DeviceDetail(MethodView):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "DeviceList", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/resources/devices.py", "pattern": "/^class DeviceList(MethodView):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "DevicePing", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/resources/devices.py", "pattern": "/^class DevicePing(MethodView):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "blp", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/resources/devices.py", "pattern": "/^blp = Blueprint($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "delete", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/resources/devices.py", "pattern": "/^    def delete(self, device_id: str):$/", "language": "Python", "kind": "member", "signature": "(self, device_id: str)", "scope": "DeviceDetail", "scopeKind": "class"}, {"_type": "tag", "name": "get", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/resources/devices.py", "pattern": "/^    def get(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "DeviceList", "scopeKind": "class"}, {"_type": "tag", "name": "get", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/resources/devices.py", "pattern": "/^    def get(self, device_id: str):$/", "language": "Python", "kind": "member", "signature": "(self, device_id: str)", "scope": "DeviceDetail", "scopeKind": "class"}, {"_type": "tag", "name": "post", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/resources/devices.py", "pattern": "/^    def post(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "DeviceList", "scopeKind": "class"}, {"_type": "tag", "name": "post", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/resources/devices.py", "pattern": "/^    def post(self, device_id: str):$/", "language": "Python", "kind": "member", "signature": "(self, device_id: str)", "scope": "DevicePing", "scopeKind": "class"}, {"_type": "tag", "name": "put", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/resources/devices.py", "pattern": "/^    def put(self, device_id: str):$/", "language": "Python", "kind": "member", "signature": "(self, device_id: str)", "scope": "DeviceDetail", "scopeKind": "class"}], "hash": "68ee829800ba87e34d1dda1cec65c47f", "format-version": 4, "code-base-name": "BackendAPIService", "filename": "BackendAPIService/app/resources/devices.py", "fields": [{"name": "blp = Blueprint(", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"25": ""}]}
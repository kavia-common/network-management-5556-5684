{"is_source_file": true, "format": "Python", "description": "This file defines Flask-based REST API endpoints for managing network devices, including CRUD operations and reachability checks, with integration to MongoDB.", "external_files": ["../models/validators", "../utils/ping", "../db"], "external_methods": ["validate_device_payload", "check_reachability", "get_mongo_client", "get_database", "init_indexes", "with_timestamps"], "published": ["blp"], "classes": [{"name": "DevicesList", "description": "Handles GET and POST requests for the collection of devices."}, {"name": "DeviceItem", "description": "Handles GET, PUT, DELETE requests for individual device by ID."}, {"name": "DevicePing", "description": "Handles POST requests to ping a device and update its reachability status."}], "methods": [{"name": "dict serialize_device(doc: dict)", "description": "Converts MongoDB document to JSON-safe dict, converting ObjectId to string.", "scope": "", "scopeKind": ""}, {"name": "json_response(data=None, message=None, error=None, status_code: int = 200)", "description": "Constructs a standardized JSON response with optional data, message, and error.", "scope": "", "scopeKind": ""}, {"name": "get_col()", "description": "Retrieves the devices collection from MongoDB and ensures indexes are set.", "scope": "", "scopeKind": ""}, {"name": "delete(self, device_id: str)", "scope": "DeviceItem", "scopeKind": "class", "description": "unavailable"}, {"name": "get(self)", "scope": "DevicesList", "scopeKind": "class", "description": "unavailable"}, {"name": "get(self, device_id: str)", "scope": "DeviceItem", "scopeKind": "class", "description": "unavailable"}, {"name": "post(self)", "scope": "DevicesList", "scopeKind": "class", "description": "unavailable"}, {"name": "post(self, device_id: str)", "scope": "DevicePing", "scopeKind": "class", "description": "unavailable"}, {"name": "put(self, device_id: str)", "scope": "DeviceItem", "scopeKind": "class", "description": "unavailable"}], "calls": ["get_mongo_client", "get_database", "init_indexes", "validate_device_payload", "with_timestamps", "check_reachability", "datetime.utcnow", "ObjectId", "col.find", "col.find_one", "col.insert_one", "col.find_one_and_update", "col.delete_one", "col.update_one"], "search-terms": ["DevicesAPI", "NetworkDevices", "Device management", "reachability check", "MongoDB ORM", "Flask REST endpoints", "device CRUD", "DevicePing"], "state": 2, "file_id": 12, "knowledge_revision": 25, "git_revision": "", "ctags": [{"_type": "tag", "name": "DeviceItem", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/resources/devices.py", "pattern": "/^class DeviceItem(MethodView):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "DevicePing", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/resources/devices.py", "pattern": "/^class DevicePing(MethodView):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "DevicesList", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/resources/devices.py", "pattern": "/^class DevicesList(MethodView):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "blp", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/resources/devices.py", "pattern": "/^blp = Blueprint($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "delete", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/resources/devices.py", "pattern": "/^    def delete(self, device_id: str):$/", "language": "Python", "kind": "member", "signature": "(self, device_id: str)", "scope": "DeviceItem", "scopeKind": "class"}, {"_type": "tag", "name": "get", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/resources/devices.py", "pattern": "/^    def get(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "DevicesList", "scopeKind": "class"}, {"_type": "tag", "name": "get", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/resources/devices.py", "pattern": "/^    def get(self, device_id: str):$/", "language": "Python", "kind": "member", "signature": "(self, device_id: str)", "scope": "DeviceItem", "scopeKind": "class"}, {"_type": "tag", "name": "get_col", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/resources/devices.py", "pattern": "/^def get_col():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "json_response", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/resources/devices.py", "pattern": "/^def json_response(data=None, message=None, error=None, status_code: int = 200):$/", "language": "Python", "kind": "function", "signature": "(data=None, message=None, error=None, status_code: int = 200)"}, {"_type": "tag", "name": "post", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/resources/devices.py", "pattern": "/^    def post(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "DevicesList", "scopeKind": "class"}, {"_type": "tag", "name": "post", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/resources/devices.py", "pattern": "/^    def post(self, device_id: str):$/", "language": "Python", "kind": "member", "signature": "(self, device_id: str)", "scope": "DevicePing", "scopeKind": "class"}, {"_type": "tag", "name": "put", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/resources/devices.py", "pattern": "/^    def put(self, device_id: str):$/", "language": "Python", "kind": "member", "signature": "(self, device_id: str)", "scope": "DeviceItem", "scopeKind": "class"}, {"_type": "tag", "name": "serialize_device", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/resources/devices.py", "pattern": "/^def serialize_device(doc: dict) -> dict:$/", "language": "Python", "typeref": "typename:dict", "kind": "function", "signature": "(doc: dict)"}], "hash": "71d1ef5e6f11185e870e7fd11990904a", "format-version": 4, "code-base-name": "BackendAPIService", "filename": "BackendAPIService/app/resources/devices.py", "fields": [{"name": "blp = Blueprint(", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"25": ""}]}
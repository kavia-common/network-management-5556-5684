{"is_source_file": true, "format": "Python", "description": "This file defines health check endpoints for a Flask web application, including a general health route and a database-specific health route using Flask-Smorest's Blueprint and MethodView.", "external_files": ["flask_smorest", "flask.views", "app"], "external_methods": ["jsonify"], "published": [], "classes": [{"name": "HealthCheck", "description": "A Flask MethodView that provides a simple endpoint to check the overall health status of the service."}, {"name": "DBHealth", "description": "A Flask MethodView that checks the health of the database connection by pinging MongoDB and returns the status."}], "methods": [{"name": "get (HealthCheck)", "description": "Handles GET requests to the root health endpoint, returning a JSON message indicating the service is healthy."}, {"name": "get (DBHealth)", "description": "Handles GET requests to /health/db, pings the database, and returns JSON indicating whether the database is operational."}, {"name": "get(self)", "scope": "HealthCheck", "scopeKind": "class", "description": "unavailable"}], "calls": ["jsonify"], "search-terms": ["health endpoint", "Flask MethodView", "MongoDB ping", "flask_smorest", "health check route"], "state": 2, "file_id": 2, "knowledge_revision": 56, "git_revision": "4f44e20b9d9eeb58b7fb8b9a9753b5184f88afe8", "revision_history": [{"10": "c0b308fc482835bb2490f37d815ddc2380ae160c"}, {"27": "c0b308fc482835bb2490f37d815ddc2380ae160c"}, {"39": "c62cc0836a2eda5db15ce90d5859efb0640ac7cb"}, {"45": "4f44e20b9d9eeb58b7fb8b9a9753b5184f88afe8"}, {"56": "4f44e20b9d9eeb58b7fb8b9a9753b5184f88afe8"}], "ctags": [{"_type": "tag", "name": "DBHealth", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/routes/health.py", "pattern": "/^class DBHealth(MethodView):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "HealthCheck", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/routes/health.py", "pattern": "/^class HealthCheck(MethodView):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "_db", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/routes/health.py", "pattern": "/^from app import db as _db  # use db.ping for health$/", "language": "Python", "kind": "unknown", "nameref": "unknown:db"}, {"_type": "tag", "name": "blp", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/routes/health.py", "pattern": "/^blp = Blueprint(\"Health\", \"health\", url_prefix=\"\\/\", description=\"Health check route\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "get", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/routes/health.py", "pattern": "/^    def get(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "DBHealth", "scopeKind": "class"}, {"_type": "tag", "name": "get", "path": "/home/kavia/workspace/code-generation/network-management-5556-5684/BackendAPIService/app/routes/health.py", "pattern": "/^    def get(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "HealthCheck", "scopeKind": "class"}], "hash": "f9aaa7fe88ac5bb49f24c2ddae4e5162", "format-version": 4, "code-base-name": "BackendAPIService", "filename": "BackendAPIService/app/routes/health.py", "fields": [{"name": "blp = Blueprint(\"Health\", \"health\", url_prefix=\"\\/\", description=\"Health check route\")", "scope": "", "scopeKind": "", "description": "unavailable"}]}